{"version":3,"sources":["components/Wrapper/Wrapper.styles.js","components/Form/Form.styles.js","servises/api-servise.js","redux/contacts/operations.js","redux/contacts/selectors.js","components/Form/Form.js","components/SectionTitle/SectionTitle.styles.js","components/SectionTitle/SectionTitle.js","components/Contacts/ContactsList.styles.js","components/Contacts/ContactsList.js","components/Filter/Filter.styles.js","redux/contacts/actions.js","components/Filter/Filter.js","components/App/App.js","redux/contacts/reducer.js","redux/contacts/store.js","index.js"],"names":["Wrapper","styled","div","FormLabel","label","FormInput","input","FormStyle","form","BtnSubmit","button","getContacts","a","axios","get","data","postContact","newContact","post","headers","deleteContact","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","_","rejectWithValue","contacts","message","postContacts","name","number","deleteContacts","getFilter","state","filter","getContactsList","getStatus","status","getError","error","getFilterContacts","createSelector","filterLowerCase","toLowerCase","contact","includes","Form","useState","setName","setNumber","dispatch","useDispatch","contactsList","useSelector","selectors","inputChange","evt","target","value","onSubmit","preventDefault","find","alert","contactsOperations","type","onChange","pattern","title","required","size","color","style","marginLeft","TitleSection","h2","SectionTitle","children","ItemContact","li","BtnDelete","ContactsList","contactList","useEffect","length","map","marginRight","onClick","idContact","FilterLabel","FilterInput","filterChange","createAction","Filter","actions","currentTarget","App","createReducer","fulfilled","payload","loading","pending","rejected","combineReducers","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed08101.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 650px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px 30px 20px;\n\n  background-color: var(--bg-color);\n  border-radius: 20px;\n  box-shadow: 1px 1px 16px -2px var(--main-color);\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 15px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FormInput = styled.input`\n  border-radius: 6px;\n  height: 26px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  width: 250px;\n  padding: 20px;\n\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  border-radius: 10px;\n`;\n\nexport const BtnSubmit = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 100px;\n  padding: 6px 15px;\n  margin-top: 10px;\n  margin-right: auto;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:7777\";\n\nexport async function getContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nexport async function postContact(newContact) {\n  const { data } = await axios.post(\"/contacts\", newContact, {\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  return data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n}\n","import {\n  getContacts,\n  deleteContact,\n  postContact,\n} from \"../../servises/api-servise\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"contacts/fetchByIdStatus\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const contacts = await getContacts();\n      return contacts;\n    } catch (error) {\n      // console.log('error', error);\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const postContacts = createAsyncThunk(\n  \"contacts/postByIdStatus\",\n  async (data, { rejectWithValue }) => {\n    try {\n      const newContact = await postContact({\n        name: data.name,\n        number: data.number,\n      });\n      return newContact;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const deleteContacts = createAsyncThunk(\n  \"contacts/deleteByIdStatus\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await deleteContact(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// -----------------------------\n// export const fetchContacts = () => async dispatch => {\n//     dispatch(actions.fetchContactsRequest());\n\n//     try {\n//         const contacts = await getContacts();\n//         dispatch(actions.fetchContactsSuccess(contacts));\n//         // console.log('data-get', contacts);\n//     } catch (error) {\n//         actions.fetchContactsError(error.message);\n//     }\n// };\n\n// export const postContacts = (data) => async dispatch => {\n//     dispatch(actions.postContactsRequest());\n//     // console.log('data', data);\n\n//     try {\n//         const newContact = await postContact({ name: data.name, number: data.number });\n//         dispatch(actions.postContactsSuccess(newContact));\n//         // console.log('data-post-contact', newContact);\n//     } catch (error) {\n//         actions.postContactsError(error.message);\n//     }\n// };\n\n// export const deleteContacts = (id) => async dispatch => {\n//     dispatch(actions.deleteContactsRequest());\n\n//     try {\n//         await deleteContact(id);\n//         dispatch(actions.deleteContactsSuccess(id));\n//     } catch (error) {\n//         actions.deleteContactsError(error.message);\n//     }\n// };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilter = state => state.filter;\nexport const getContactsList = state => state.contacts;\nexport const getStatus = state => state.status;\nexport const getError = state => state.error;\n\nexport const getFilterContacts = createSelector(\n  [getContactsList, getFilter],\n  (contacts, filter) => {\n    const filterLowerCase = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowerCase),\n    );\n  },\n);\n","import { useState } from \"react\";\nimport { FormLabel, FormInput, FormStyle, BtnSubmit } from \"./Form.styles\";\nimport { MdPersonAdd } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsOperations, selectors } from \"redux/contacts\";\n\nexport default function Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contactsList = useSelector(selectors.getContactsList);\n\n  const onSubmit = data => {\n    if (\n      contactsList.find(\n        contact => data.name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in contacts`);\n      return contactsList;\n    }\n\n    dispatch(\n      contactsOperations.postContacts({ name: data.name, number: data.number }),\n    );\n  };\n\n  function inputChange(evt) {\n    const { name } = evt.target;\n\n    switch (name) {\n      case \"name\":\n        setName(evt.target.value);\n        break;\n      case \"number\":\n        setNumber(evt.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function formSubmit(evt) {\n    evt.preventDefault();\n    onSubmit({ name, number });\n\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <FormStyle onSubmit={formSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          value={name}\n          onChange={inputChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Fhone number\n        <FormInput\n          type=\"tel\"\n          value={number}\n          onChange={inputChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </FormLabel>\n\n      <BtnSubmit type=\"submit\">\n        ADD CONTACT{\" \"}\n        <MdPersonAdd size={26} color=\"#8919FA\" style={{ marginLeft: 20 }} />\n      </BtnSubmit>\n    </FormStyle>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const TitleSection = styled.h2`\n  font-weight: bold;\n  padding: 20px 0px;\n`;\n","import { TitleSection } from \"./SectionTitle.styles\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <section>\n      <TitleSection>{title}</TitleSection>\n      {children}\n    </section>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default SectionTitle;\n","import styled from \"@emotion/styled\";\n\nexport const ItemContact = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 80px;\n  padding: 3px 18px;\n\n  border-color: var(--second-color);\n  border-radius: 6px;\n\n  &:hover,\n  &:focus {\n    background-color: var(--second-color);\n    color: var(--invers-color);\n    cursor: pointer;\n  }\n`;\n","import { ItemContact, BtnDelete } from \"./ContactsList.styles\";\nimport { MdDelete } from \"react-icons/md\";\nimport { RiUser3Line } from \"react-icons/ri\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { contactsOperations, selectors } from \"redux/contacts\";\n\nexport default function ContactsList() {\n  const contactList = useSelector(selectors.getFilterContacts);\n  const status = useSelector(selectors.getStatus);\n  const error = useSelector(selectors.getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  const onDelete = idContact =>\n    dispatch(contactsOperations.deleteContacts(idContact));\n\n  if (status === \"idle\") {\n    return null;\n  }\n\n  if (status === \"rejected\") {\n    return <p>{`${error}`}</p>;\n  }\n\n  if (status === \"resolved\") {\n    if (contactList.length === 0) {\n      return <p>В телефонной книге нет контактов</p>;\n    } else {\n      return (\n        <ul>\n          {contactList.map(contact => (\n            <ItemContact key={contact.id}>\n              <div>\n                <RiUser3Line size={14} style={{ marginRight: 10 }} />\n                {contact.name}: {contact.number}\n              </div>\n              <BtnDelete type=\"submit\" onClick={() => onDelete(contact.id)}>\n                delete\n                <MdDelete\n                  size={16}\n                  color=\"#8919FA\"\n                  style={{ marginLeft: 10 }}\n                />\n              </BtnDelete>\n            </ItemContact>\n          ))}\n        </ul>\n      );\n    }\n  }\n\n  // ---------------------------------------------------------\n  // return (\n  //       <ul>\n  //         {contactList.length > 0 && contactList.map(contact => (\n  //              <ItemContact key={contact.id}>\n  //               <div>\n  //                 <RiUser3Line size={14} style={{ marginRight: 10 }} />\n  //                 {contact.name}: {contact.number}\n  //               </div>\n  //               <BtnDelete type=\"submit\" onClick={() => onDelete(contact.id)}>\n  //                 delete\n  //                 <MdDelete size={16} color=\"#8919FA\" style={{ marginLeft: 10 }} />\n  //               </BtnDelete>\n  //             </ItemContact>\n  //           ))\n  //         }\n  //       </ul>\n  // )\n}\n\n// -------------------------------\n// import PropTypes from \"prop-types\";\n// import { ItemContact, BtnDelete } from \"./ContactsList.styles\";\n// import { MdDelete } from \"react-icons/md\";\n// import { RiUser3Line } from \"react-icons/ri\";\n// import { connect } from \"react-redux\";\n// import * as actions from \"../../redux/actions\";\n\n// const ContactsList = ({ contactList, onDelete }) => {\n//   return (\n//     <ul>\n//       {contactList.map(contact => (\n//         <ItemContact key={contact.id}>\n//           <div>\n//             <RiUser3Line size={14} style={{ marginRight: 10 }} />\n//             {contact.name}: {contact.number}\n//           </div>\n//           <BtnDelete type=\"submit\" onClick={() => onDelete(contact.id)}>\n//             delete\n//             <MdDelete size={16} color=\"#8919FA\" style={{ marginLeft: 10 }} />\n//           </BtnDelete>\n//         </ItemContact>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// const filterContacts = (allContacts, filter) => {\n//   const filterLowerCase = filter.toLowerCase();\n\n//   const contactsFilter = allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(filterLowerCase),\n//   );\n\n//   return contactsFilter;\n// };\n\n// const mapStateToProps = state => {\n//   const contactsFilter = filterContacts(state.contacts, state.filter);\n\n//   return { contactList: contactsFilter };\n// };\n\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: idContact => dispatch(actions.onDeleteContact(idContact)),\n// });\n\n// ContactsList.propTypes = {\n//   contactList: PropTypes.array.isRequired,\n//   onDelete: PropTypes.func.isRequired,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import styled from \"@emotion/styled\";\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n\n  width: 200px;\n  margin-bottom: 20px;\n\n  font-weight: bold;\n  font-size: 14px;\n`;\n\nexport const FilterInput = styled.input`\n  border-radius: 6px;\n  height: 24px;\n  border-color: var(--second-color);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    outline: none;\n    border-color: var(--main-color);\n  }\n`;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterChange = createAction(\"filterChange\");\n\n// -------------------------------------------\n// export const fetchContactsRequest = createAction(\"fetchContactsRequest\");\n// export const fetchContactsSuccess = createAction(\"fetchContactsSuccess\");\n// export const fetchContactsError = createAction(\"fetchContactsError\");\n\n// export const deleteContactsRequest = createAction(\"deleteContactsRequest\");\n// export const deleteContactsSuccess = createAction(\"deleteContactsSuccess\");\n// export const deleteContactsError = createAction(\"deleteContactsError\");\n\n// export const postContactsRequest = createAction(\"postContactsRequest\");\n// export const postContactsSuccess = createAction(\"postContactsSuccess\");\n// export const postContactsError = createAction(\"postContactsError\");\n","import { FilterLabel, FilterInput } from \"./Filter.styles\";\nimport * as actions from \"../../redux//contacts/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectors } from \"redux/contacts\";\n\nexport default function Filter() {\n  const filter = useSelector(selectors.getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = evt =>\n    dispatch(actions.filterChange(evt.currentTarget.value));\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </FilterLabel>\n  );\n}\n\n// ----------------------------------------------\n// import PropTypes from \"prop-types\";\n// import { FilterLabel, FilterInput } from \"./Filter.styles\";\n// import { connect } from \"react-redux\";\n// import * as actions from \"../../redux/actions\";\n\n// const Filter = ({ filter, onFilterChange }) => {\n//   return (\n//     <FilterLabel>\n//       Find contacts by name\n//       <FilterInput\n//         type=\"text\"\n//         name=\"filter\"\n//         value={filter}\n//         onChange={onFilterChange}\n//       />\n//     </FilterLabel>\n//   );\n// };\n\n// Filter.propTypes = {\n//   filter: PropTypes.string,\n//   onFilterChange: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = state => ({\n//   filter: state.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onFilterChange: evt =>\n//     dispatch(actions.filterChange(evt.currentTarget.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Wrapper } from \"../Wrapper/Wrapper.styles\";\nimport Form from \"../Form\";\nimport SectionTitle from \"../SectionTitle\";\nimport ContactsList from \"../Contacts\";\nimport Filter from \"../Filter\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <SectionTitle title=\"Phonebook\">\n        <Form />\n      </SectionTitle>\n\n      <SectionTitle title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </SectionTitle>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\nimport { fetchContacts, postContacts, deleteContacts } from \"./operations\";\n\nfunction deleteContact(state, idContact) {\n  return state.filter(contact => contact.id !== idContact);\n}\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    deleteContact(state, payload),\n  [postContacts.fulfilled]: (state, { payload }) => {\n    return [...state, payload];\n  },\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n  [postContacts.pending]: () => true,\n  [postContacts.fulfilled]: () => false,\n  [postContacts.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, { payload }) => payload,\n  [fetchContacts.pending]: () => null,\n  [deleteContacts.rejected]: (_, { payload }) => payload,\n  [deleteContacts.pending]: () => null,\n  [postContacts.rejected]: (_, { payload }) => payload,\n  [postContacts.pending]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filterChange]: (_, { payload }) => payload,\n});\n\nconst status = createReducer(\"idle\", {\n  [fetchContacts.fulfilled]: () => \"resolved\",\n  [fetchContacts.rejected]: () => \"rejected\",\n  [deleteContacts.rejected]: () => \"rejected\",\n  [postContacts.rejected]: () => \"rejected\",\n});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  error,\n  filter,\n  status,\n});\n\n// -----------------------------\n","import reducer from \"./reducer\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nconst store = configureStore({\n  // reducer: rootReducer,\n  reducer,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport store from \"./redux/contacts/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}